%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 191 333 651 858 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: Milwakee_Remix_by_VK.eps
%%CreationDate: Mon Apr 13 14:29:10 2020
%%DocumentProcessColors: Magenta Yellow 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 13.0.0.739
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
191.19883 333.56069 650.69093 856.99049 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
0 J 0 j 4.000000050272775 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.21600 0.21600 0.00000 @w
420.94488 842.69367 m
411.41395 842.70557 L
401.94482 842.51764 L
400.93682 841.50964 L
399.77688 840.68957 L
398.49987 840.06850 L
397.13301 839.67364 L
395.71795 839.50951 L
394.29978 839.58463 L
392.90995 839.89247 L
391.59298 840.43162 L
390.38598 841.17770 L
389.31987 842.11965 L
388.42186 843.22460 L
387.72198 844.46362 L
387.24180 845.79846 L
386.98781 847.20161 L
386.97194 848.62346 L
387.19077 850.02548 L
387.64375 851.37364 L
388.31187 852.63052 L
389.18296 853.75559 L
390.22583 854.72050 L
391.41780 855.49465 L
390.27288 856.13868 L
389.04690 856.60753 L
387.76082 856.89269 L
386.45291 856.99049 L
382.66781 856.99049 L
381.33184 856.88872 L
380.02280 856.59165 L
378.77301 856.10353 L
377.60882 855.43569 L
376.56198 854.59946 L
377.85090 854.00561 L
379.02274 853.20964 L
380.04690 852.22857 L
380.89389 851.08762 L
381.53877 849.82649 L
381.96482 848.47465 L
382.15984 847.06866 L
382.12101 845.65049 L
381.84293 844.25953 L
381.33978 842.93150 L
380.62488 841.70948 L
379.71496 840.61956 L
378.63298 839.69773 L
377.41776 838.97065 L
376.09682 838.45162 L
374.70699 838.16249 L
373.28882 838.10750 L
371.88283 838.28750 L
370.52674 838.70164 L
369.25682 839.33461 L
368.10879 840.16658 L
357.13276 838.84564 L
346.23383 837.26362 L
335.41398 835.42762 L
325.13839 833.56072 313.52003 831.02967 303.39383 828.46658 C
292.86680 825.67757 L
282.40980 822.65471 L
279.71490 822.16261 L
271.95307 820.41137 266.36003 816.14863 263.79694 808.54866 c
262.56416 804.89339 261.94989 800.83389 261.72595 796.99068 C
261.61682 793.65061 L
260.75679 787.52551 L
258.79691 782.72447 L
255.33950 775.23279 250.52428 769.13263 242.46482 766.50548 c
235.99928 764.39792 227.86554 764.94898 223.11298 761.75263 C
221.53096 760.43565 L
220.87474 759.67058 L
218.93698 758.10756 L
213.87685 753.38192 211.69587 745.71165 210.57392 739.10750 C
210.24198 736.99058 L
210.26013 736.91461 211.70211 735.34564 212.14375 733.05666 c
212.50006 731.20932 212.15055 728.99943 211.24176 727.34967 c
210.33213 725.69792 208.66082 724.22787 206.90589 723.53764 c
205.16003 722.85109 202.92038 722.78561 201.13597 723.37351 c
198.84444 724.12866 196.82901 726.00435 195.91795 728.24060 C
195.48000 729.64658 L
194.75461 729.00850 194.13553 728.48721 193.54989 727.66261 c
192.44523 726.10724 191.95824 724.33729 191.88595 722.45169 c
191.84797 721.45928 191.84145 717.07096 192.01890 716.05672 c
192.26353 714.65839 193.06063 712.94088 193.97197 711.84954 C
195.06983 710.74460 L
195.39213 711.65735 195.66539 712.48507 196.22976 713.33065 C
197.52151 715.26671 199.76967 716.68857 202.07395 717.02561 c
204.89074 717.43776 207.89518 716.31524 209.74989 714.15865 c
212.28265 711.21345 212.46831 706.74803 210.17877 703.60753 C
209.24589 702.52951 L
209.26091 702.23272 L
208.76088 693.14258 L
208.32775 675.02551 L
208.39776 665.99858 L
209.13307 665.29587 209.77880 664.70797 210.33978 663.79153 c
211.32794 662.17720 211.77213 659.99197 211.49575 658.11969 c
211.14255 655.72753 209.62176 653.40992 207.56976 652.13461 c
205.97074 651.14079 203.76510 650.67959 201.90189 650.93953 c
200.02620 651.20117 198.05698 652.24375 196.78479 653.64661 c
196.22778 654.26088 195.52904 655.36696 195.21496 656.13458 C
194.77701 657.54170 L
194.06154 656.90957 193.43140 656.37553 192.85483 655.56057 c
191.76123 654.01483 191.27282 652.23439 191.19883 650.36154 C
191.31591 644.13071 L
191.60901 642.31852 192.60624 640.39635 193.92180 639.11565 C
195.02674 638.19751 L
195.29688 639.13748 195.51940 639.97824 196.03899 640.86548 c
197.48296 643.33134 200.26687 644.97883 203.12079 645.06472 c
205.96989 645.15033 208.85471 643.66328 210.44098 641.29550 c
212.02753 638.92715 212.30107 635.69594 211.13575 633.09146 C
210.44494 631.84167 L
212.36683 616.25962 L
223.03871 547.37660 230.21235 515.32554 259.90384 446.10775 c
275.61260 409.48696 272.21499 399.82507 272.21499 361.71354 C
272.34057 359.14337 273.00274 355.78885 273.85200 353.36154 c
278.04728 341.36872 289.60016 333.35178 302.28180 333.56069 c
313.92992 333.75231 324.51931 340.90243 329.05474 351.63071 c
331.62803 357.71811 332.07959 364.77213 330.29291 371.14668 c
329.59644 373.63181 328.21965 376.74142 326.84400 378.92750 C
325.21493 381.25956 L
322.52400 384.29150 L
310.90167 397.47912 300.46677 410.06466 289.69597 423.95556 C
242.95380 511.41600 221.10463 590.22794 225.77301 692.83446 C
226.22995 701.12750 L
226.35241 703.09219 226.16306 705.06680 226.10494 707.03348 C
225.89461 714.14192 225.92466 721.26539 226.42186 728.36164 C
226.71184 732.18246 227.78561 742.41014 230.40198 745.52173 C
231.96501 746.77550 L
232.81143 747.50372 232.34287 747.34328 233.79676 747.57260 C
239.17039 748.42072 242.57537 748.60214 248.08195 750.45146 c
257.85921 753.73512 265.27635 760.19556 270.67181 768.91663 C
274.41808 775.27814 275.43515 768.17055 280.44765 768.17055 c
285.04602 768.17055 288.13039 770.72854 292.13575 772.92765 C
315.06775 785.16907 340.12460 795.72189 365.40198 802.12762 C
382.54139 806.38923 399.00161 808.90696 416.69093 809.19751 C
420.94488 809.22472 L
425.19883 809.19751 L
442.88816 808.90696 459.34838 806.38923 476.48778 802.12762 C
501.76517 795.72189 526.82202 785.16907 549.75402 772.92765 C
553.75937 770.72854 556.84375 768.17055 561.44211 768.17055 c
566.45461 768.17055 567.47169 775.27814 571.21795 768.91663 C
576.61342 760.19556 584.03055 753.73512 593.80781 750.45146 c
599.31439 748.60214 602.71937 748.42072 608.09301 747.57260 C
609.54690 747.34328 609.07833 747.50372 609.92476 746.77550 C
611.48778 745.52173 L
614.10416 742.41014 615.17792 732.18246 615.46791 728.36164 C
615.96510 721.26539 615.99515 714.14192 615.78482 707.03348 C
615.72671 705.06680 615.53735 703.09219 615.65981 701.12750 C
616.11676 692.83446 L
620.78513 590.22794 598.93597 511.41600 552.19380 423.95556 C
541.42299 410.06466 530.98809 397.47912 519.36576 384.29150 C
516.67483 381.25956 L
515.04576 378.92750 L
513.67011 376.74142 512.29332 373.63181 511.59685 371.14668 c
509.81017 364.77213 510.26173 357.71811 512.83502 351.63071 c
517.37046 340.90243 527.95984 333.75231 539.60797 333.56069 c
552.28961 333.35178 563.84249 341.36872 568.03776 353.36154 C
568.88702 355.78885 569.54920 359.14337 569.67477 361.71354 C
569.67477 399.82507 566.27717 409.48696 581.98592 446.10775 c
611.67742 515.32554 618.85106 547.37660 629.52293 616.25962 C
631.44482 631.84167 L
630.75402 633.09146 L
629.58869 635.69594 629.86224 638.92715 631.44879 641.29550 c
633.03506 643.66328 635.91987 645.15033 638.76898 645.06472 c
641.62290 644.97883 644.40680 643.33134 645.85077 640.86548 c
646.37036 639.97824 646.59288 639.13748 646.86302 638.19751 C
647.96797 639.11565 L
649.28353 640.39635 650.28076 642.31852 650.57386 644.13071 C
650.69093 650.36154 L
650.61694 652.23439 650.12854 654.01483 649.03493 655.56057 c
648.45836 656.37553 647.82822 656.90957 647.11276 657.54170 C
646.67480 656.13458 L
646.36072 655.36696 645.66198 654.26088 645.10498 653.64661 c
643.83279 652.24375 641.86356 651.20117 639.98787 650.93953 c
638.12466 650.67959 635.91902 651.14079 634.32000 652.13461 c
632.26800 653.40992 630.74721 655.72753 630.39402 658.11969 c
630.11764 659.99197 630.56183 662.17720 631.54998 663.79153 c
632.11096 664.70797 632.75669 665.29587 633.49200 665.99858 C
633.56202 675.02551 L
633.12888 693.14258 L
632.62885 702.23272 L
632.64387 702.52951 L
631.71099 703.60753 L
629.42145 706.74803 629.60712 711.21345 632.13987 714.15865 c
633.99458 716.31524 636.99902 717.43776 639.81581 717.02561 c
642.12009 716.68857 644.36825 715.26671 645.66000 713.33065 C
646.22438 712.48507 646.49764 711.65735 646.81994 710.74460 C
647.91780 711.84954 L
648.82913 712.94088 649.62624 714.65839 649.87087 716.05672 c
650.04831 717.07096 650.04180 721.45928 650.00381 722.45169 c
649.93153 724.33729 649.44454 726.10724 648.33987 727.66261 c
647.75424 728.48721 647.13515 729.00850 646.40976 729.64658 C
645.97181 728.24060 L
645.06076 726.00435 643.04532 724.12866 640.75380 723.37351 c
638.96939 722.78561 636.72973 722.85109 634.98387 723.53764 c
633.22894 724.22787 631.55764 725.69792 630.64800 727.34967 c
629.73921 728.99943 629.38970 731.20932 629.74602 733.05666 c
630.18765 735.34564 631.62964 736.91461 631.64778 736.99058 C
631.31584 739.10750 L
630.19389 745.71165 628.01291 753.38192 622.95279 758.10756 C
621.01502 759.67058 L
620.35880 760.43565 L
618.77679 761.75263 L
614.02422 764.94898 605.89049 764.39792 599.42494 766.50548 c
591.36548 769.13263 586.55027 775.23279 583.09285 782.72447 C
581.13298 787.52551 L
580.27294 793.65061 L
580.16381 796.99068 L
579.93987 800.83389 579.32561 804.89339 578.09282 808.54866 c
575.52973 816.14863 569.93669 820.41137 562.17487 822.16261 C
559.47997 822.65471 L
549.02296 825.67757 L
538.49594 828.46658 L
528.36973 831.02967 516.75137 833.56072 506.47578 835.42762 C
495.65594 837.26362 L
484.75701 838.84564 L
473.78098 840.16658 L
472.63294 839.33461 L
471.36302 838.70164 L
470.00693 838.28750 L
468.60094 838.10750 L
467.18277 838.16249 L
465.79294 838.45162 L
464.47200 838.97065 L
463.25679 839.69773 L
462.17480 840.61956 L
461.26488 841.70948 L
460.54998 842.93150 L
460.04683 844.25953 L
459.76876 845.65049 L
459.72992 847.06866 L
459.92494 848.47465 L
460.35099 849.82649 L
460.99587 851.08762 L
461.84287 852.22857 L
462.86702 853.20964 L
464.03887 854.00561 L
465.32778 854.59946 L
464.28094 855.43569 L
463.11676 856.10353 L
461.86696 856.59165 L
460.55792 856.88872 L
459.22195 856.99049 L
455.43685 856.99049 L
454.12894 856.89269 L
452.84287 856.60753 L
451.61688 856.13868 L
450.47197 855.49465 L
451.66394 854.72050 L
452.70680 853.75559 L
453.57789 852.63052 L
454.24602 851.37364 L
454.69899 850.02548 L
454.91783 848.62346 L
454.90195 847.20161 L
454.64797 845.79846 L
454.16778 844.46362 L
453.46791 843.22460 L
452.56989 842.11965 L
451.50378 841.17770 L
450.29679 840.43162 L
448.97981 839.89247 L
447.58998 839.58463 L
446.17181 839.50951 L
444.75676 839.67364 L
443.38989 840.06850 L
442.11288 840.68957 L
440.95294 841.50964 L
439.94494 842.51764 L
430.47581 842.70557 L
420.94488 842.69367 L
@c
540.75713 358.75162 m
541.50293 358.95146 L
542.20620 359.27943 L
542.83493 359.72447 L
543.38202 360.26759 L
543.82706 360.90057 L
544.15219 361.59959 L
544.35118 362.34567 L
544.41694 363.11556 L
544.35118 363.88460 L
544.15219 364.63039 L
543.82706 365.33055 L
543.38202 365.96239 L
542.83493 366.50948 L
542.20620 366.95140 L
541.50293 367.27540 L
540.75713 367.47439 L
539.99093 367.54441 L
539.22217 367.47439 L
538.47609 367.27540 L
537.77707 366.95140 L
537.14409 366.50948 L
536.59701 365.96239 L
536.15509 365.33055 L
535.82712 364.63039 L
535.62813 363.88460 L
535.56208 363.11556 L
535.62813 362.34567 L
535.82712 361.59959 L
536.15509 360.90057 L
536.59701 360.26759 L
537.14409 359.72447 L
537.77707 359.27943 L
538.47609 358.95146 L
539.22217 358.75162 L
539.99093 358.68557 L
540.75713 358.75162 L
@c
301.13263 358.75162 m
300.38683 358.95146 L
299.68356 359.27943 L
299.05483 359.72447 L
298.50775 360.26759 L
298.06271 360.90057 L
297.73757 361.59959 L
297.53858 362.34567 L
297.47282 363.11556 L
297.53858 363.88460 L
297.73757 364.63039 L
298.06271 365.33055 L
298.50775 365.96239 L
299.05483 366.50948 L
299.68356 366.95140 L
300.38683 367.27540 L
301.13263 367.47439 L
301.89883 367.54441 L
302.66759 367.47439 L
303.41367 367.27540 L
304.11269 366.95140 L
304.74567 366.50948 L
305.29276 365.96239 L
305.73468 365.33055 L
306.06265 364.63039 L
306.26164 363.88460 L
306.32769 363.11556 L
306.26164 362.34567 L
306.06265 361.59959 L
305.73468 360.90057 L
305.29276 360.26759 L
304.74567 359.72447 L
304.11269 359.27943 L
303.41367 358.95146 L
302.66759 358.75162 L
301.89883 358.68557 L
301.13263 358.75162 L
@c
420.17499 821.30655 m
419.42891 821.50951 L
418.72989 821.83465 L
418.09691 822.27969 L
417.55380 822.82252 L
417.10876 823.45550 L
416.78476 824.15452 L
416.58576 824.90060 L
416.51490 825.67049 L
416.58576 826.43953 L
416.78476 827.18561 L
417.10876 827.88463 L
417.55380 828.51761 L
418.09691 829.06469 L
418.72989 829.50548 L
419.42891 829.83458 L
420.17499 830.03357 L
420.94488 830.09962 L
421.71477 830.03357 L
422.46085 829.83458 L
423.15987 829.50548 L
423.79285 829.06469 L
424.33994 828.51761 L
424.78101 827.88463 L
425.10898 827.18561 L
425.30797 826.43953 L
425.37487 825.67049 L
425.30797 824.90060 L
425.10898 824.15452 L
424.78101 823.45550 L
424.33994 822.82252 L
423.79285 822.27969 L
423.15987 821.83465 L
422.46085 821.50951 L
421.71477 821.30655 L
420.94488 821.24050 L
420.17499 821.30655 L
@c
B

 @gs spg @gr
%%PageTrailer
@rs
@rs

%%Page: 2 2
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 2
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
